a)
k er lengden på pythoon-listen

Procedure push_back(A, x)
    append x to A

Procedure push_front(A, x)
    i <- 0
    append A[k-1] to A
    while i < k do
        A[k-i] <- A[k-i-1]
        i+=1
    A[0] <- x

Procedure push_middle(A, x)
    mid <- ⌊(k+1)/2⌋
    i <- 0
    append A[k-1] to A
    while i < mid do
        A[k-i] <- A[k-i-1]
        t+=1
    A[mid] <- x

Procedure get(A, i)
    return A[i]

c)
push_back : O(1)
push_front : O(n)
push_middle : O(n) men tar dobbelt så kort tid som push_front
get : O(1)


d)
Hvis N er begrenset så er kjøretidskompleksiteten lik O(N). Siden 
N er en konstant blir kjøretidskompleksiteten til O(1).